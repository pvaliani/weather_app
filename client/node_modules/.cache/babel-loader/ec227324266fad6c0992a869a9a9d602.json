{"ast":null,"code":"var _jsxFileName = \"/Users/pedram/Coding/bezero_weather_app/src/components/CurrentWeather.js\";\nimport { Container, Header, Image, List, Embed, Grid } from 'semantic-ui-react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CurrentWeather({\n  datetime,\n  weatherCondition,\n  cityName,\n  sunsetTime,\n  currentTemperature,\n  sunriseTime,\n  observedTime,\n  weatherIcon\n}) {\n  if (!datetime) return null;\n  console.log(datetime + \"HIIIIIII\");\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        children: /*#__PURE__*/_jsxDEV(Grid.Column, {\n          textAlign: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(Divider, {\n            children: [\"DATE: \", datetime, \"  \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 16,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            children: [\"WEATHER CONDITION: \", weatherCondition, \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 17,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {\n            children: [\"ICON: \", /*#__PURE__*/_jsxDEV(Image, {\n              src: weatherIcon,\n              className: \"logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 18,\n              columnNumber: 24\n            }, this), \" \"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 9\n          }, this), \"CITY NAME:\", cityName, \"SUNRISE TIME:\", sunriseTime, \"SUNSET TIME:\", sunsetTime, \"CURRENT TEMP:\", currentTemperature, \"TIME WEATHER LAST OBSERVED:\", observedTime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 15,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_c = CurrentWeather;\nexport default CurrentWeather;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentWeather\");","map":{"version":3,"sources":["/Users/pedram/Coding/bezero_weather_app/src/components/CurrentWeather.js"],"names":["Container","Header","Image","List","Embed","Grid","CurrentWeather","datetime","weatherCondition","cityName","sunsetTime","currentTemperature","sunriseTime","observedTime","weatherIcon","console","log"],"mappings":";AAAA,SAAQA,SAAR,EAAmBC,MAAnB,EAA2BC,KAA3B,EAAkCC,IAAlC,EAAwCC,KAAxC,EAA+CC,IAA/C,QAA0D,mBAA1D;;;;AAIA,SAASC,cAAT,CAAwB;AAACC,EAAAA,QAAD;AAAWC,EAAAA,gBAAX;AAA6BC,EAAAA,QAA7B;AAAuCC,EAAAA,UAAvC;AAAmDC,EAAAA,kBAAnD;AAAuEC,EAAAA,WAAvE;AAAoFC,EAAAA,YAApF;AAAkGC,EAAAA;AAAlG,CAAxB,EAAuI;AACpI,MAAI,CAACP,QAAL,EAAe,OAAO,IAAP;AACfQ,EAAAA,OAAO,CAACC,GAAR,CAAYT,QAAQ,GAAG,UAAvB;AAIC,sBACI;AAAA,2BACA,QAAC,SAAD;AAAA,6BACA,QAAC,IAAD;AAAA,+BACE,QAAC,IAAD,CAAM,MAAN;AAAa,UAAA,SAAS,EAAC,QAAvB;AAAA,kCACF,QAAC,OAAD;AAAA,iCAAgBA,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA,kBADE,eAEF,QAAC,OAAD;AAAA,8CAA6BC,gBAA7B;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFE,eAGF,QAAC,OAAD;AAAA,8CAAe,QAAC,KAAD;AAAO,cAAA,GAAG,EAAEM,WAAZ;AAAyB,cAAA,SAAS,EAAC;AAAnC;AAAA;AAAA;AAAA;AAAA,oBAAf;AAAA;AAAA;AAAA;AAAA;AAAA,kBAHE,gBAKDL,QALC,mBAODG,WAPC,kBASDF,UATC,mBAWDC,kBAXC,iCAaDE,YAbC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA;AADA,mBADJ;AA6BH;;KAnCQP,c;AAuCT,eAAeA,cAAf","sourcesContent":["import {Container, Header, Image, List, Embed, Grid} from 'semantic-ui-react';\n\n\n\nfunction CurrentWeather({datetime, weatherCondition, cityName, sunsetTime, currentTemperature, sunriseTime, observedTime, weatherIcon}){\n   if (!datetime) return null\n   console.log(datetime + \"HIIIIIII\")\n\n\n\n    return(\n        <>\n        <Container>\n        <Grid>\n          <Grid.Column textAlign=\"center\">\n        <Divider>DATE: {datetime}  </Divider>\n        <Divider>WEATHER CONDITION: {weatherCondition} </Divider>\n        <Divider>ICON: <Image src={weatherIcon} className='logo' /> </Divider> \n        CITY NAME: \n        {cityName}\n        SUNRISE TIME:\n        {sunriseTime}\n        SUNSET TIME:\n        {sunsetTime}\n        CURRENT TEMP:\n        {currentTemperature}\n        TIME WEATHER LAST OBSERVED:\n        {observedTime}\n            </Grid.Column>\n        </Grid>\n        </Container>\n\n\n\n     \n        </>\n    )\n\n\n}\n\n\n\nexport default CurrentWeather;"]},"metadata":{},"sourceType":"module"}