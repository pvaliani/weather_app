{"ast":null,"code":"var _jsxFileName = \"/Users/pedram/Coding/bezero_weather_app/src/containers/CurrentWeatherContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useState, useEffect } from \"react\";\nimport CurrentWeather from \"../components/CurrentWeather\";\nimport CurrentWeatherList from \"../components/CurrentWeatherList\";\nimport LocationAsCityForm from \"../components/LocationAsCityForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CurrentWeatherContainer() {\n  _s();\n\n  // Sets state for the current weather object which is an array\n  // also sets state for the location input by the user\n  const [currentWeather, setCurrentWeather] = useState([{}]);\n  const [location, setLocation] = useState(\"\"); // handles the location submitted by the \"as city\" form\n  // invokes the fetch passing the location to getCurrentWeatherAsCity\n\n  const handleLocationAsCitySubmit = location => {\n    getCurrentWeatherAsCity(location);\n  }; // This is the fetch which provides currentWeather from the API via location which will be input by the user\n\n\n  const getCurrentWeatherAsCity = location => {\n    const url = \"https://api.weatherbit.io/v2.0/current?city=\" + location + \"&key=42f951c1eea94e33a68cd790a1f613fb\"; // const url = \"https://api.weatherbit.io/v2.0/current?city=edinburgh,UK&key=42f951c1eea94e33a68cd790a1f613fb\"\n\n    console.log(\"Url: \" + url);\n    fetch(url).then(res => res.json()).then(data => {\n      // console.log(data);\n      setCurrentWeather(data);\n    });\n  }; // useEffect(() => {\n  //     getCurrentWeatherAsCity();\n  //   }, [])\n  // Format the user input to the form\n  // Pseudocode to format user input for the API\n  // Convert string to lower case\n  // Convert string to array with comma delimiter - .split(“,”)\n  // For each element in the array, get rid of leading and trailing white space - .trim()\n  // For each element in the array, replace any space with an underscore - .replace(“ “, “_”)\n  // Convert the array back to a string\n\n\n  const formatInput = userInput => {\n    // const lowerCase = userInput.toLowerCase();\n    // const inputArray = lowerCase.split(\",\");\n    // const formattedArray = inputArray.map(i => i.trim());\n    // const arrayWithUnderscores = formattedArray.map(i => i.replace(\" \", \"_\"));\n    // const formattedString = lowerCase;\n    // // const formattedString = arrayWithUnderscores.toString();\n    // console.log(formattedString);\n    // return formattedString;\n    return userInput;\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"This is the CurrentWeatherContainer\", /*#__PURE__*/_jsxDEV(LocationAsCityForm, {\n      handleLocationAsCitySubmit: handleLocationAsCitySubmit,\n      location: location,\n      setLocation: setLocation,\n      formatInput: formatInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CurrentWeatherList, {\n      location: location,\n      currentWeather: currentWeather.data\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(CurrentWeather, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CurrentWeatherContainer, \"J6+zzDMIE7oMmfHpoWH5gfmZ9e4=\");\n\n_c = CurrentWeatherContainer;\nexport default CurrentWeatherContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentWeatherContainer\");","map":{"version":3,"sources":["/Users/pedram/Coding/bezero_weather_app/src/containers/CurrentWeatherContainer.js"],"names":["useState","useEffect","CurrentWeather","CurrentWeatherList","LocationAsCityForm","CurrentWeatherContainer","currentWeather","setCurrentWeather","location","setLocation","handleLocationAsCitySubmit","getCurrentWeatherAsCity","url","console","log","fetch","then","res","json","data","formatInput","userInput"],"mappings":";;;AAAA,SAASA,QAAT,EAAmBC,SAAnB,QAAoC,OAApC;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;;;;AAEA,SAASC,uBAAT,GAAkC;AAAA;;AAE9B;AACA;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCP,QAAQ,CAAC,CAAC,EAAD,CAAD,CAApD;AACA,QAAM,CAACQ,QAAD,EAAWC,WAAX,IAA0BT,QAAQ,CAAC,EAAD,CAAxC,CAL8B,CAQ9B;AACA;;AACA,QAAMU,0BAA0B,GAAIF,QAAD,IAAc;AAC7CG,IAAAA,uBAAuB,CAACH,QAAD,CAAvB;AACH,GAFD,CAV8B,CAc9B;;;AACA,QAAMG,uBAAuB,GAAIH,QAAD,IAAc;AAC9C,UAAMI,GAAG,GAAG,iDAA+CJ,QAA/C,GAAwD,uCAApE,CAD8C,CAE9C;;AAEAK,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAUF,GAAtB;AAEAG,IAAAA,KAAK,CAACH,GAAD,CAAL,CACKI,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACV;AACAZ,MAAAA,iBAAiB,CAACY,IAAD,CAAjB;AACH,KALL;AAOC,GAbD,CAf8B,CA8B9B;AACA;AACA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,QAAMC,WAAW,GAAIC,SAAD,IAAe;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAOA,SAAP;AACH,GAVD;;AAaA,sBACI;AAAA,mEAEA,QAAC,kBAAD;AACA,MAAA,0BAA0B,EAAEX,0BAD5B;AAEA,MAAA,QAAQ,EAAEF,QAFV;AAGA,MAAA,WAAW,EAAEC,WAHb;AAIA,MAAA,WAAW,EAAEW;AAJb;AAAA;AAAA;AAAA;AAAA,YAFA,eASA,QAAC,kBAAD;AACA,MAAA,QAAQ,EAAEZ,QADV;AAEA,MAAA,cAAc,EAAEF,cAAc,CAACa;AAF/B;AAAA;AAAA;AAAA;AAAA,YATA,eAcA,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,YAdA;AAAA,kBADJ;AAqBH;;GA7EQd,uB;;KAAAA,uB;AAgFT,eAAeA,uBAAf","sourcesContent":["import { useState, useEffect } from \"react\";\nimport CurrentWeather from \"../components/CurrentWeather\";\nimport CurrentWeatherList from \"../components/CurrentWeatherList\";\nimport LocationAsCityForm from \"../components/LocationAsCityForm\";\n\nfunction CurrentWeatherContainer(){\n\n    // Sets state for the current weather object which is an array\n    // also sets state for the location input by the user\n    const [currentWeather, setCurrentWeather] = useState([{}]);\n    const [location, setLocation] = useState(\"\");\n\n    \n    // handles the location submitted by the \"as city\" form\n    // invokes the fetch passing the location to getCurrentWeatherAsCity\n    const handleLocationAsCitySubmit = (location) => {\n        getCurrentWeatherAsCity(location);\n    }\n\n    // This is the fetch which provides currentWeather from the API via location which will be input by the user\n    const getCurrentWeatherAsCity = (location) => {\n    const url = \"https://api.weatherbit.io/v2.0/current?city=\"+location+\"&key=42f951c1eea94e33a68cd790a1f613fb\"\n    // const url = \"https://api.weatherbit.io/v2.0/current?city=edinburgh,UK&key=42f951c1eea94e33a68cd790a1f613fb\"\n\n    console.log(\"Url: \" + url);\n    \n    fetch(url)\n        .then(res => res.json())\n        .then(data => {\n            // console.log(data);\n            setCurrentWeather(data);\n        })\n\n    }\n\n    // useEffect(() => {\n    //     getCurrentWeatherAsCity();\n    //   }, [])\n    \n\n    // Format the user input to the form\n    // Pseudocode to format user input for the API\n    // Convert string to lower case\n    // Convert string to array with comma delimiter - .split(“,”)\n    // For each element in the array, get rid of leading and trailing white space - .trim()\n    // For each element in the array, replace any space with an underscore - .replace(“ “, “_”)\n    // Convert the array back to a string\n    \n    const formatInput = (userInput) => {\n        // const lowerCase = userInput.toLowerCase();\n        // const inputArray = lowerCase.split(\",\");\n        // const formattedArray = inputArray.map(i => i.trim());\n        // const arrayWithUnderscores = formattedArray.map(i => i.replace(\" \", \"_\"));\n        // const formattedString = lowerCase;\n        // // const formattedString = arrayWithUnderscores.toString();\n        // console.log(formattedString);\n        // return formattedString;\n        return userInput\n    }\n\n\n    return(\n        <>\n        This is the CurrentWeatherContainer\n        <LocationAsCityForm \n        handleLocationAsCitySubmit={handleLocationAsCitySubmit}\n        location={location}\n        setLocation={setLocation}\n        formatInput={formatInput}\n        />\n\n        <CurrentWeatherList \n        location={location}\n        currentWeather={currentWeather.data}\n        />\n\n        <CurrentWeather />\n\n        </>\n    )\n\n\n}\n\n\nexport default CurrentWeatherContainer;"]},"metadata":{},"sourceType":"module"}