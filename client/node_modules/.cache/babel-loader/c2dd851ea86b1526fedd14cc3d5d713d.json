{"ast":null,"code":"var _jsxFileName = \"/Users/pedram/Coding/bezero_weather_app/src/containers/CurrentWeatherContainer.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport LocationAsCityForm from \"../components/LocationAsCityForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction CurrentWeatherContainer() {\n  _s();\n\n  // sets state for the current weather object which is an array\n  const [currentWeather, setCurrentWeather] = useState([]); // handles the location submitted by the \"as city\" form\n\n  const handleLocationAsCitySubmit = location => {\n    getCurrentWeatherAsCity(location);\n  }; // This is the fetch which provides currentWeather from the API via location which will be input by the user\n\n\n  const getCurrentWeatherAsCity = location => {\n    const url = \"https://api.weatherbit.io/v2.0/current?city=\" + location + \"&key=42f951c1eea94e33a68cd790a1f613fb\";\n    console.log(\"Url: \" + url);\n    fetch(url).then(res => res.json()).then(data => {\n      console.log(data);\n      setCurrentWeather(data);\n    }); // Format the user input to the form\n    // Pseudocode to format user input for the API\n    // Convert string to lower case\n    // Convert string to array with comma delimiter - .split(“,”)\n    // For each element in the array, get rid of leading and trailing white space - .trim()\n    // For each element in the array, replace any space with an underscore - .replace(“ “, “_”)\n    // Convert the array back to a string\n\n    const formatInput = userInput => {\n      const lowerCase = userInput.toLowerCase();\n      const inputArray = lowerCase.split(\",\");\n      const formattedArray = inputArray.map(i => i.trim());\n      const arrayWithUnderscores = formattedArray.map(i => i.replace(\" \", \"_\"));\n      const formattedString = arrayWithUnderscores.toString();\n      return formattedString;\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [\"This is the CurrentWeatherContainer\", /*#__PURE__*/_jsxDEV(LocationAsCityForm, {\n      location: location,\n      handleLocationAsCitySubmit: handleLocationAsCitySubmit,\n      formatInput: formatInput\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(CurrentWeatherContainer, \"r7nBmBOq6YDZKzlyFpchfa23bsE=\");\n\n_c = CurrentWeatherContainer;\nexport default CurrentWeatherContainer;\n\nvar _c;\n\n$RefreshReg$(_c, \"CurrentWeatherContainer\");","map":{"version":3,"sources":["/Users/pedram/Coding/bezero_weather_app/src/containers/CurrentWeatherContainer.js"],"names":["useState","LocationAsCityForm","CurrentWeatherContainer","currentWeather","setCurrentWeather","handleLocationAsCitySubmit","location","getCurrentWeatherAsCity","url","console","log","fetch","then","res","json","data","formatInput","userInput","lowerCase","toLowerCase","inputArray","split","formattedArray","map","i","trim","arrayWithUnderscores","replace","formattedString","toString"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,kBAAP,MAA+B,kCAA/B;;;;AAEA,SAASC,uBAAT,GAAkC;AAAA;;AAE9B;AACA,QAAM,CAACC,cAAD,EAAiBC,iBAAjB,IAAsCJ,QAAQ,CAAC,EAAD,CAApD,CAH8B,CAM9B;;AACA,QAAMK,0BAA0B,GAAIC,QAAD,IAAc;AAC7CC,IAAAA,uBAAuB,CAACD,QAAD,CAAvB;AACH,GAFD,CAP8B,CAW9B;;;AACA,QAAMC,uBAAuB,GAAID,QAAD,IAAc;AAC9C,UAAME,GAAG,GAAG,iDAA+CF,QAA/C,GAAwD,uCAApE;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAY,UAAUF,GAAtB;AAGAG,IAAAA,KAAK,CAACH,GAAD,CAAL,CACKI,IADL,CACUC,GAAG,IAAIA,GAAG,CAACC,IAAJ,EADjB,EAEKF,IAFL,CAEUG,IAAI,IAAI;AACVN,MAAAA,OAAO,CAACC,GAAR,CAAYK,IAAZ;AACAX,MAAAA,iBAAiB,CAACW,IAAD,CAAjB;AACH,KALL,EAL8C,CAY9C;AACA;AACA;AACA;AACA;AACA;AACA;;AACA,UAAMC,WAAW,GAAIC,SAAD,IAAe;AAC/B,YAAMC,SAAS,GAAGD,SAAS,CAACE,WAAV,EAAlB;AACA,YAAMC,UAAU,GAAGF,SAAS,CAACG,KAAV,CAAgB,GAAhB,CAAnB;AACA,YAAMC,cAAc,GAAGF,UAAU,CAACG,GAAX,CAAeC,CAAC,IAAIA,CAAC,CAACC,IAAF,EAApB,CAAvB;AACA,YAAMC,oBAAoB,GAAGJ,cAAc,CAACC,GAAf,CAAmBC,CAAC,IAAIA,CAAC,CAACG,OAAF,CAAU,GAAV,EAAe,GAAf,CAAxB,CAA7B;AACA,YAAMC,eAAe,GAAGF,oBAAoB,CAACG,QAArB,EAAxB;AAEA,aAAOD,eAAP;AACH,KARD;AAUH,GA7BG;;AAgCA,sBACI;AAAA,mEAEA,QAAC,kBAAD;AACA,MAAA,QAAQ,EAAEtB,QADV;AAEA,MAAA,0BAA0B,EAAED,0BAF5B;AAGA,MAAA,WAAW,EAAEW;AAHb;AAAA;AAAA;AAAA;AAAA,YAFA;AAAA,kBADJ;AAaH;;GAzDQd,uB;;KAAAA,uB;AA6DT,eAAeA,uBAAf","sourcesContent":["import { useState } from \"react\";\nimport LocationAsCityForm from \"../components/LocationAsCityForm\";\n\nfunction CurrentWeatherContainer(){\n\n    // sets state for the current weather object which is an array\n    const [currentWeather, setCurrentWeather] = useState([]);\n\n    \n    // handles the location submitted by the \"as city\" form\n    const handleLocationAsCitySubmit = (location) => {\n        getCurrentWeatherAsCity(location);\n    }\n\n    // This is the fetch which provides currentWeather from the API via location which will be input by the user\n    const getCurrentWeatherAsCity = (location) => {\n    const url = \"https://api.weatherbit.io/v2.0/current?city=\"+location+\"&key=42f951c1eea94e33a68cd790a1f613fb\"\n    console.log(\"Url: \" + url);\n    \n\n    fetch(url)\n        .then(res => res.json())\n        .then(data => {\n            console.log(data);\n            setCurrentWeather(data);\n        })\n\n    // Format the user input to the form\n    // Pseudocode to format user input for the API\n    // Convert string to lower case\n    // Convert string to array with comma delimiter - .split(“,”)\n    // For each element in the array, get rid of leading and trailing white space - .trim()\n    // For each element in the array, replace any space with an underscore - .replace(“ “, “_”)\n    // Convert the array back to a string\n    const formatInput = (userInput) => {\n        const lowerCase = userInput.toLowerCase();\n        const inputArray = lowerCase.split(\",\");\n        const formattedArray = inputArray.map(i => i.trim());\n        const arrayWithUnderscores = formattedArray.map(i => i.replace(\" \", \"_\"));\n        const formattedString = arrayWithUnderscores.toString();\n    \n        return formattedString;\n    }\n\n}\n\n\n    return(\n        <>\n        This is the CurrentWeatherContainer\n        <LocationAsCityForm \n        location={location}\n        handleLocationAsCitySubmit={handleLocationAsCitySubmit}\n        formatInput={formatInput}\n        />\n\n        </>\n    )\n\n\n}\n\n\n\nexport default CurrentWeatherContainer;"]},"metadata":{},"sourceType":"module"}