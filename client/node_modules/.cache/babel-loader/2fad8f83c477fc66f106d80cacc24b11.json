{"ast":null,"code":"var _jsxFileName = \"/Users/pedram/Coding/bezero_weather_app/src/components/ForecastWeatherList.js\";\nimport ForecastWeather from './ForecastWeather'; // forecastWeather in this location is the array stored in the data key from the Weatherbit API\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction ForecastWeatherList({\n  forecastWeather\n}) {\n  // return nothing if there is no current weather object, otherwise...\n  if (!forecastWeather) return null;\n  console.log(forecastWeather); // Map forecastWeather array to access the JSON keys\n\n  const displayForecastWeather = forecastWeather.map(weather => {\n    console.log(weather.sunset);\n    console.log(weather.datetime);\n    return /*#__PURE__*/_jsxDEV(ForecastWeather, {\n      datetime: weather.datetime,\n      weatherCondition: weather.weather.description,\n      cityName: weather.city_name,\n      sunsetTime: weather.sunset,\n      sunriseTime: weather.sunrise,\n      currentTemperature: weather.temp,\n      observedTime: weather.ob_time\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 16\n    }, this);\n  }); // console.log(displayForecastWeather)\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: displayForecastWeather\n  }, void 0, false);\n}\n\n_c = ForecastWeatherList;\nexport default ForecastWeatherList;\n\nvar _c;\n\n$RefreshReg$(_c, \"ForecastWeatherList\");","map":{"version":3,"sources":["/Users/pedram/Coding/bezero_weather_app/src/components/ForecastWeatherList.js"],"names":["ForecastWeather","ForecastWeatherList","forecastWeather","console","log","displayForecastWeather","map","weather","sunset","datetime","description","city_name","sunrise","temp","ob_time"],"mappings":";AAAA,OAAOA,eAAP,MAA4B,mBAA5B,C,CAEA;;;;;AAEA,SAASC,mBAAT,CAA6B;AAACC,EAAAA;AAAD,CAA7B,EAA+C;AAC3C;AACA,MAAI,CAACA,eAAL,EAAsB,OAAO,IAAP;AAEtBC,EAAAA,OAAO,CAACC,GAAR,CAAYF,eAAZ,EAJ2C,CAM3C;;AACA,QAAMG,sBAAsB,GAAGH,eAAe,CAACI,GAAhB,CAAoBC,OAAO,IAAI;AAC1DJ,IAAAA,OAAO,CAACC,GAAR,CAAYG,OAAO,CAACC,MAApB;AACAL,IAAAA,OAAO,CAACC,GAAR,CAAYG,OAAO,CAACE,QAApB;AACA,wBAAO,QAAC,eAAD;AACC,MAAA,QAAQ,EAAEF,OAAO,CAACE,QADnB;AAEC,MAAA,gBAAgB,EAAEF,OAAO,CAACA,OAAR,CAAgBG,WAFnC;AAGC,MAAA,QAAQ,EAAEH,OAAO,CAACI,SAHnB;AAIC,MAAA,UAAU,EAAEJ,OAAO,CAACC,MAJrB;AAKC,MAAA,WAAW,EAAED,OAAO,CAACK,OALtB;AAMC,MAAA,kBAAkB,EAAEL,OAAO,CAACM,IAN7B;AAOC,MAAA,YAAY,EAAEN,OAAO,CAACO;AAPvB;AAAA;AAAA;AAAA;AAAA,YAAP;AAWH,GAd8B,CAA/B,CAP2C,CAuB3C;;AAEA,sBAEI;AAAA,cAGCT;AAHD,mBAFJ;AASH;;KAlCQJ,mB;AAsCT,eAAeA,mBAAf","sourcesContent":["import ForecastWeather from './ForecastWeather';\n\n// forecastWeather in this location is the array stored in the data key from the Weatherbit API\n\nfunction ForecastWeatherList({forecastWeather}){\n    // return nothing if there is no current weather object, otherwise...\n    if (!forecastWeather) return null;\n\n    console.log(forecastWeather);\n\n    // Map forecastWeather array to access the JSON keys\n    const displayForecastWeather = forecastWeather.map(weather => {\n        console.log(weather.sunset);\n        console.log(weather.datetime)\n        return <ForecastWeather\n                datetime={weather.datetime}\n                weatherCondition={weather.weather.description}\n                cityName={weather.city_name}\n                sunsetTime={weather.sunset}\n                sunriseTime={weather.sunrise}\n                currentTemperature={weather.temp}\n                observedTime={weather.ob_time}\n\n                />\n           \n    })\n\n    // console.log(displayForecastWeather)\n\n    return(\n    \n        <>\n        {/* {forecastWeather} */}\n        \n        {displayForecastWeather}\n        \n        </>\n    )\n}\n\n\n\nexport default ForecastWeatherList;"]},"metadata":{},"sourceType":"module"}